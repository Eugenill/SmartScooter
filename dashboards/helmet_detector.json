[{"id":"95cd962a.59da38","type":"tab","label":"LIGHT_HELMET-TELEGRAM","disabled":false,"info":""},{"id":"de36c767.cd0c18","type":"http in","z":"95cd962a.59da38","name":"","url":"/helmet","method":"get","upload":false,"swaggerDoc":"","x":150,"y":80,"wires":[["da2c0171.7a7cc"]]},{"id":"bcb0a318.c81ad","type":"http response","z":"95cd962a.59da38","name":"","statusCode":"","headers":{},"x":560,"y":80,"wires":[]},{"id":"da2c0171.7a7cc","type":"template","z":"95cd962a.59da38","name":"Video - p5js, ml5js","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<div>Teachable Machine Image Model - p5.js and ml5.js</div>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n<script src=\"https://unpkg.com/ml5@0.4.3/dist/ml5.min.js\"></script>\n<script type=\"text/javascript\">\n  // Classifier Variable\n  let classifier;\n  // Model URL\n  let imageModelURL = 'https://teachablemachine.withgoogle.com/models/xICvkPgUG/';\n  \n  // Video\n  let video;\n  let flippedVideo;\n  // To store the classification\n  let label = \"\";\n\n  // Load the model first\n  function preload() {\n    classifier = ml5.imageClassifier(imageModelURL + 'model.json');\n  }\n\n  function setup() {\n    createCanvas(320, 260);\n    // Create the video\n    video = createCapture(VIDEO);\n    video.size(320, 240);\n    video.hide();\n\n    flippedVideo = ml5.flipImage(video);\n    // Start classifying\n    classifyVideo();\n  }\n\n  function draw() {\n    background(0);\n    // Draw the video\n    image(flippedVideo, 0, 0);\n\n    // Draw the label\n    fill(255);\n    textSize(16);\n    textAlign(CENTER);\n    text(label, width / 2, height - 4);\n  }\n\n  // Get a prediction for the current video frame\n  function classifyVideo() {\n    flippedVideo = ml5.flipImage(video)\n    classifier.classify(flippedVideo, gotResult);\n    flippedVideo.remove();\n\n  }\n\n  // When we get a result\n  function gotResult(error, results) {\n    // If there is an error\n    if (error) {\n      console.error(error);\n      return;\n    }\n    // The results are in an array ordered by confidence.\n    console.log(results[0]);\n    label = results[0].label;\n    // Classifiy again!\n    classifyVideo();\n  }\n</script>","output":"str","x":360,"y":80,"wires":[["bcb0a318.c81ad"]]},{"id":"5157f77e.940e08","type":"debug","z":"95cd962a.59da38","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":410,"y":820,"wires":[]},{"id":"5340fdfc.affda4","type":"catch","z":"95cd962a.59da38","name":"","scope":null,"uncaught":false,"x":160,"y":820,"wires":[["5157f77e.940e08"]]},{"id":"83bdb60e.c52698","type":"function","z":"95cd962a.59da38","name":"inline keyboard message","func":"context.global.keyboard = { pending : true };\n\nvar opts = {\n  reply_to_message_id: msg.payload.messageId,\n  reply_markup: JSON.stringify({\n    \"inline_keyboard\": [[\n                {\n                    \"text\": \"Yes\",\n                    \"callback_data\": \"FOO YES\"            \n                }, \n                {\n                    \"text\": \"No\",\n                    \"callback_data\": \"FOO NO\"            \n                }]\n            ]\n  })\n};\n\nmsg.payload.content = 'Are you sure?';\nmsg.payload.options = opts;\n\nreturn [ msg ];\n","outputs":"1","noerr":0,"x":450,"y":960,"wires":[["694859b0.490198"]]},{"id":"bb776df.e5b5a9","type":"function","z":"95cd962a.59da38","name":"set answer options","func":"var show_alert = false; // you can set this to true to open a dialog with the answer in the client.\n\n// msg.payload.content contains the callback data from the keyboard.\n// You may change this value here.\nmsg.payload.options = show_alert;\n\nreturn [ msg ];\n","outputs":"1","noerr":0,"x":430,"y":880,"wires":[["5f77eb68.05e794"]]},{"id":"859d0ee4.33948","type":"template","z":"95cd962a.59da38","name":"Image - p5js, ml5js","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<div>Teachable Machine Image Model - p5.js and ml5.js</div>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n<script src=\"https://unpkg.com/ml5@0.4.3/dist/ml5.min.js\"></script>\n<script type=\"text/javascript\">\n  // Classifier Variable\n  let classifier;\n  // Model URL\n  let imageModelURL = 'https://teachablemachine.withgoogle.com/models/xICvkPgUG/';\n  \n  // Image\n  let image;\n  let flippedImage;\n  // To store the classification\n  let label = \"\";\n\n  // Load the model first\n  function preload() {\n    classifier = ml5.imageClassifier(imageModelURL + 'model.json');\n    //img = createImg('https://labicikleta.com/wp-content/uploads/2018/09/Casco-ciclista_-Getty-image_2-770x433.png');\n    img = loadImage('/Desktop/SmartScooter/HELMET/WITHOUT_HELMET/PICTURES/WITHOUT_HELMET-1.jpg');\n      \n  }\n\n  function setup() {\n    //img = createImg('https://labicikleta.com/wp-content/uploads/2018/09/Casco-ciclista_-Getty-image_2-770x433.png');\n    //img = loadImage('/Desktop/SmartScooter/HELMET/WITH_HELMET/PICTURES/WITH_HELMET-1.jpg',imageReady);\n    createCanvas(320, 260);\n    // Create the video\n    //image = createCapture(VIDEO);\n    //img.size(320, 240);\n    //img.hide();\n\n    //flippedImage = ml5.flipImage(image);\n    // Start classifying\n    imageReady();\n  }\n\n  function draw() {\n    background(255);\n    // Draw the video\n    //image(img, 0, 0);\n\n    // Draw the label\n    fill(0);\n    textSize(16);\n    textAlign(CENTER);\n    text(label, width / 2, height - 4);\n  }\n  function imageReady() {\n  // The image should be 227x227\n  //img.attribute('width', 227);\n  //img.attribute('height', 227);\n  //img.hide();\n\n  // Get a prediction for that image\n  classifier.classify(img, gotResult);\n  }\n  \n  // Get a prediction for the current video frame\n /* function classifyVideo() {\n    flippedImage = ml5.flipImage(image)\n    classifier.classify(flippedImage, gotResult);\n    //flippedImage.remove();\n\n  }*/\n\n  // When we get a result\n  function gotResult(error, results) {\n    // If there is an error\n    if (error) {\n      console.error(error);\n      return;\n    }\n    // The results are in an array ordered by confidence.\n    // console.log(results[0]);\n    label = results[0].label;\n    // Classifiy again!\n    //classifyVideo();\n  }\n</script>","output":"str","x":370,"y":200,"wires":[["9f293fb2.3bdec"]]},{"id":"c2599683.472b68","type":"http in","z":"95cd962a.59da38","name":"","url":"/helmet2","method":"get","upload":false,"swaggerDoc":"","x":150,"y":200,"wires":[["859d0ee4.33948"]]},{"id":"9f293fb2.3bdec","type":"http response","z":"95cd962a.59da38","name":"","statusCode":"","headers":{},"x":570,"y":200,"wires":[]},{"id":"9b560d8c.b1be3","type":"comment","z":"95cd962a.59da38","name":"VIDEO PREDICTION","info":"","x":180,"y":40,"wires":[]},{"id":"44fcb681.c21088","type":"comment","z":"95cd962a.59da38","name":"IMAGE PREDICTION, FROM FILES","info":"","x":220,"y":160,"wires":[]},{"id":"b2ba7cda.6e95a","type":"comment","z":"95cd962a.59da38","name":"Need to quit // from httpStatic: '/home/eugeni/',","info":"","x":310,"y":240,"wires":[]},{"id":"50f0c54e.1bf76c","type":"ui_template","z":"95cd962a.59da38","group":"57a0f5db.73ba4c","name":"","order":0,"width":0,"height":0,"format":"<div>Teachable Machine Image Model</div>\n<button type=\"button\" onclick=\"init()\">Start</button>\n<div id=\"webcam-container\"></div>\n<div id=\"label-container\"></div>\n<script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n<script type=\"text/javascript\">\n    // More API functions here:\n    // https://github.com/googlecreativelab/teachablemachine-community/tree/master/libraries/image\n\n    // the link to your model provided by Teachable Machine export panel\n    const URL = \"https://teachablemachine.withgoogle.com/models/xICvkPgUG/\";\n\n    let model, webcam, labelContainer, maxPredictions;\n\n    // Load the image model and setup the webcam\n    async function init() {\n        const modelURL = URL + \"model.json\";\n        const metadataURL = URL + \"metadata.json\";\n\n        // load the model and metadata\n        // Refer to tmImage.loadFromFiles() in the API to support files from a file picker\n        // or files from your local hard drive\n        // Note: the pose library adds \"tmImage\" object to your window (window.tmImage)\n        model = await tmImage.load(modelURL, metadataURL);\n        maxPredictions = model.getTotalClasses();\n\n        // Convenience function to setup a webcam\n        const flip = true; // whether to flip the webcam\n        webcam = new tmImage.Webcam(200, 200, flip); // width, height, flip\n        await webcam.setup(); // request access to the webcam\n        await webcam.play();\n        window.requestAnimationFrame(loop);\n\n        // append elements to the DOM\n        document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n        labelContainer = document.getElementById(\"label-container\");\n        for (let i = 0; i < maxPredictions; i++) { // and class labels\n            labelContainer.appendChild(document.createElement(\"div\"));\n        }\n    }\n\n    async function loop() {\n        webcam.update(); // update the webcam frame\n        await predict();\n        window.requestAnimationFrame(loop);\n    }\n\n    // run the webcam image through the image model\n    async function predict() {\n        // predict can take in an image, video or canvas html element\n        const prediction = await model.predict(webcam.canvas);\n        for (let i = 0; i < maxPredictions; i++) {\n            const classPrediction =\n                prediction[i].className + \": \" + prediction[i].probability.toFixed(2);\n            labelContainer.childNodes[i].innerHTML = classPrediction;\n        }\n    }\n</script>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":720,"y":140,"wires":[[]]},{"id":"226ce581.29ed5a","type":"template","z":"95cd962a.59da38","name":"Video-js","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<div>Teachable Machine Image Model</div>\n<button type=\"button\" onclick=\"init()\">Start</button>\n<div id=\"webcam-container\"></div>\n<div id=\"label-container\"></div>\n<script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n<script type=\"text/javascript\">\n    // More API functions here:\n    // https://github.com/googlecreativelab/teachablemachine-community/tree/master/libraries/image\n\n    // the link to your model provided by Teachable Machine export panel\n    const URL = \"https://teachablemachine.withgoogle.com/models/xICvkPgUG/\";\n\n    let model, webcam, labelContainer, maxPredictions;\n\n    // Load the image model and setup the webcam\n    async function init() {\n        const modelURL = URL + \"model.json\";\n        const metadataURL = URL + \"metadata.json\";\n\n        // load the model and metadata\n        // Refer to tmImage.loadFromFiles() in the API to support files from a file picker\n        // or files from your local hard drive\n        // Note: the pose library adds \"tmImage\" object to your window (window.tmImage)\n        model = await tmImage.load(modelURL, metadataURL);\n        maxPredictions = model.getTotalClasses();\n\n        // Convenience function to setup a webcam\n        const flip = true; // whether to flip the webcam\n        webcam = new tmImage.Webcam(200, 200, flip); // width, height, flip\n        await webcam.setup(); // request access to the webcam\n        await webcam.play();\n        window.requestAnimationFrame(loop);\n\n        // append elements to the DOM\n        document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n        labelContainer = document.getElementById(\"label-container\");\n        for (let i = 0; i < maxPredictions; i++) { // and class labels\n            labelContainer.appendChild(document.createElement(\"div\"));\n        }\n    }\n\n    async function loop() {\n        webcam.update(); // update the webcam frame\n        await predict();\n        window.requestAnimationFrame(loop);\n    }\n\n    // run the webcam image through the image model\n    async function predict() {\n        // predict can take in an image, video or canvas html element\n        const prediction = await model.predict(webcam.canvas);\n        for (let i = 0; i < maxPredictions; i++) {\n            const classPrediction =\n                prediction[i].className + \": \" + prediction[i].probability.toFixed(2);\n            labelContainer.childNodes[i].innerHTML = classPrediction;\n        }\n    }\n</script>\n","output":"str","x":720,"y":80,"wires":[[]]},{"id":"aafebde1.6e8d5","type":"debug","z":"95cd962a.59da38","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":970,"y":100,"wires":[]},{"id":"f3f8c674.4d7398","type":"image","z":"95cd962a.59da38","name":"","width":160,"data":"payload","dataType":"msg","thumbnail":false,"active":true,"outputs":0,"x":1120,"y":480,"wires":[]},{"id":"95aaa00b.53645","type":"file","z":"95cd962a.59da38","name":"","filename":"/home/eugeni/Desktop/git/SmartScooter/Helmet/image.jpg","appendNewline":true,"createDir":false,"overwriteFile":"true","encoding":"none","x":750,"y":740,"wires":[[]]},{"id":"e48ec933.1bbf18","type":"change","z":"95cd962a.59da38","name":"","rules":[{"t":"set","p":"chatId","pt":"flow","to":"payload.chatId","tot":"msg"},{"t":"set","p":"type","pt":"flow","to":"payload.type","tot":"msg"},{"t":"set","p":"content","pt":"flow","to":"payload.content","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":380,"y":680,"wires":[[]]},{"id":"fe67e486.3035d8","type":"file","z":"95cd962a.59da38","name":"","filename":"","appendNewline":true,"createDir":true,"overwriteFile":"false","encoding":"none","x":830,"y":780,"wires":[[]]},{"id":"e0f80bf4.415e08","type":"function","z":"95cd962a.59da38","name":"COUNT + FILENAME","func":"var count=flow.get('count')||0;\ncount+=1\nflow.set('count',count)\nmsg.filename = '/home/eugeni/Desktop/git/SmartScooter/Helmet/images/image_'+String(count)+'.jpg'\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":780,"wires":[["fe67e486.3035d8"]]},{"id":"dcbd73db.b48ba","type":"teachable machine","z":"95cd962a.59da38","name":"","mode":"online","modelUrl":"https://teachablemachine.withgoogle.com/models/xICvkPgUG/","output":"all","activeThreshold":false,"threshold":"80","activeMaxResults":false,"maxResults":"2","passThrough":true,"x":510,"y":380,"wires":[["39dc8925.df2776","aafebde1.6e8d5"]]},{"id":"39dc8925.df2776","type":"function","z":"95cd962a.59da38","name":"SENDER","func":"var a=msg.payload[0].class + ': '+msg.payload[0].score\nmsg.payload={}\nmsg.payload.content=a\nmsg.payload.chatId=flow.get('chatId')\nmsg.payload.type='message'\nreturn msg;","outputs":1,"noerr":0,"x":720,"y":380,"wires":[["fc16c361.2d5aa","aafebde1.6e8d5","e7d84f6c.77db5"]]},{"id":"639bc629.d16e68","type":"inject","z":"95cd962a.59da38","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":160,"y":380,"wires":[["c0c25d74.6514a"]]},{"id":"c0c25d74.6514a","type":"http request","z":"95cd962a.59da38","name":"","method":"GET","ret":"bin","paytoqs":false,"url":"https://loremflickr.com/320/240/head","tls":"","persist":false,"proxy":"","authType":"","x":310,"y":380,"wires":[["dcbd73db.b48ba","f3f8c674.4d7398"]]},{"id":"dbb8b974.c07c18","type":"function","z":"95cd962a.59da38","name":"set payload and headers","func":"msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['Authorization'] = 'Bearer x';\nmsg.headers['Vehicle'] = 'x';\nmsg.url=\"https://api.reby.co/v2/research/ride\"\nif (msg.payload==\"ride\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1050,"y":280,"wires":[["cfb0868c.01cdc8"]]},{"id":"cfb0868c.01cdc8","type":"http request","z":"95cd962a.59da38","name":"REBY POST","method":"POST","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","x":1070,"y":240,"wires":[["aafebde1.6e8d5"]]},{"id":"e7d84f6c.77db5","type":"function","z":"95cd962a.59da38","name":"SENDER","func":"if (msg.payload.content.split(\":\")[0]===\"WITH HELMET\"){\n    msg.payload.content=\"Congratulations! We detected your helmet! Now you are able to ride securely. ;)\"\n    msg.payload.voice=\"Welcome \"+msg.originalMessage.from.first_name+\", let's go for a ride!\"\n    return [msg, msg];    \n}\nelse if (msg.payload.content.split(\":\")[0]===\"WITHOUT HELMET\"){\n    msg.payload.content=\"We couldn't detect the helmet! Remember to wear it! \"\n}\nelse{\n    msg.payload.content=\"Nothing was detected. Please try again!\"\n}\nreturn [msg, null];","outputs":2,"noerr":0,"x":900,"y":340,"wires":[["ff87113c.1a328","aafebde1.6e8d5"],["9db22c14.132ba","1f89bf21.b57191"]]},{"id":"7fbd47a9.eeb428","type":"ui_audio","z":"95cd962a.59da38","name":"","group":"57a0f5db.73ba4c","voice":"en-US","always":"","x":1160,"y":420,"wires":[]},{"id":"9db22c14.132ba","type":"change","z":"95cd962a.59da38","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.voice","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1140,"y":380,"wires":[["7fbd47a9.eeb428"]]},{"id":"1f89bf21.b57191","type":"change","z":"95cd962a.59da38","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"ride","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":840,"y":280,"wires":[["dbb8b974.c07c18"]]},{"id":"6326a956.a3c528","type":"http request","z":"95cd962a.59da38","name":"","method":"GET","ret":"bin","paytoqs":false,"url":"{{{payload.weblink}}}","tls":"","persist":false,"proxy":"","authType":"","x":410,"y":740,"wires":[["f3f8c674.4d7398","dcbd73db.b48ba"]]},{"id":"13b3f0f8.00667f","type":"telegram receiver","z":"95cd962a.59da38","name":"","bot":"785a4ad7.05a464","saveDataDir":"","filterCommands":false,"x":190,"y":720,"wires":[["e48ec933.1bbf18","6326a956.a3c528"],[]]},{"id":"5f31ad64.cc4aa4","type":"telegram command","z":"95cd962a.59da38","name":"/foo","command":"/foo","bot":"785a4ad7.05a464","strict":false,"hasresponse":false,"outputs":2,"x":150,"y":1040,"wires":[["370864a3.f2e2fc"],[]]},{"id":"e772441b.284b78","type":"telegram command","z":"95cd962a.59da38","name":"/foo","command":"/foo","bot":"785a4ad7.05a464","strict":false,"outputs":2,"x":150,"y":960,"wires":[["83bdb60e.c52698"],[]]},{"id":"edd1dfdf.9fd6a","type":"telegram event","z":"95cd962a.59da38","name":"","bot":"785a4ad7.05a464","event":"callback_query","autoanswer":true,"x":180,"y":880,"wires":[["bb776df.e5b5a9"]]},{"id":"370864a3.f2e2fc","type":"telegram sender","z":"95cd962a.59da38","name":"","bot":"785a4ad7.05a464","outputs":1,"x":710,"y":1040,"wires":[[]]},{"id":"fc16c361.2d5aa","type":"telegram sender","z":"95cd962a.59da38","name":"","bot":"785a4ad7.05a464","haserroroutput":false,"outputs":1,"x":910,"y":400,"wires":[[]]},{"id":"694859b0.490198","type":"telegram sender","z":"95cd962a.59da38","name":"show inline keyboard","bot":"785a4ad7.05a464","outputs":1,"x":720,"y":960,"wires":[[]]},{"id":"5f77eb68.05e794","type":"telegram sender","z":"95cd962a.59da38","name":"answer callback query","bot":"785a4ad7.05a464","outputs":1,"x":720,"y":880,"wires":[[]]},{"id":"ff87113c.1a328","type":"telegram sender","z":"95cd962a.59da38","name":"","bot":"785a4ad7.05a464","haserroroutput":false,"outputs":1,"x":1150,"y":320,"wires":[[]]},{"id":"57a0f5db.73ba4c","type":"ui_group","name":"Light_HELMET","tab":"e8026007.1917f","order":1,"disp":true,"width":"6","collapse":false},{"id":"785a4ad7.05a464","type":"telegram bot","botname":"Your bot","usernames":"","chatids":"","baseapiurl":"","updatemode":"polling","pollinterval":"300","usesocks":false,"sockshost":"","socksport":"6667","socksusername":"anonymous","sockspassword":"","bothost":"","botpath":"","localbotport":"8443","publicbotport":"8443","privatekey":"","certificate":"","useselfsignedcertificate":false,"sslterminated":false,"verboselogging":false},{"id":"e8026007.1917f","type":"ui_tab","d":true,"name":"HELMET","icon":"fa-unlock-alt","order":6,"disabled":false,"hidden":false}]